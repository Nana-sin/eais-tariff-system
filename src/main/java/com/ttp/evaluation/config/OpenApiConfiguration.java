package com.ttp.evaluation.config;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OpenAPI/Swagger —Å JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */
@Configuration
public class OpenApiConfiguration {

    @Value("${spring.application.name:ttp-evaluation-system}")
    private String applicationName;

    @Bean
    public OpenAPI customOpenAPI() {
        final String securitySchemeName = "bearerAuth";

        return new OpenAPI()
                .info(new Info()
                        .title("TTP Evaluation System API")
                        .version("1.0.0")
                        .description("""
                                # –ï–¥–∏–Ω–∞—è –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –°–∏—Å—Ç–µ–º–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ—Ä –¢–¢–ü
                                
                                ## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
                                - üîç **–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤** –ø–æ –∫–æ–¥–∞–º –¢–ù –í–≠–î –ï–ê–≠–°
                                - ‚öñÔ∏è **–û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏** 6 —Ç–∏–ø–æ–≤ –º–µ—Ä —Ç–æ—Ä–≥–æ–≤–æ-—Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                                - üìä **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è** —Å Trade Map, UN Comtrade, –†–æ—Å—Å—Ç–∞—Ç, WTO
                                - ü§ñ **ML-assisted –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è** (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
                                
                                ## –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:
                                1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ `/api/v1/auth/register`
                                2. –ü–æ–ª—É—á–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ `/api/v1/auth/login`
                                3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ: `Authorization: Bearer <token>`
                                
                                ## –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
                                - **ENTERPRISE** - –°–æ–∑–¥–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –æ—Ü–µ–Ω–∫—É –º–µ—Ä
                                - **EXPERT** - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–¥–æ–±—Ä—è–µ—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é
                                - **ADMIN** - –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
                                """)
                        .contact(new Contact()
                                .name("TTP Development Team")
                                .email("support@ttp-evaluation.ru")
                                .url("https://github.com/your-org/ttp-evaluation-system"))
                        .license(new License()
                                .name("Apache 2.0")
                                .url("https://www.apache.org/licenses/LICENSE-2.0.html")))
                .servers(List.of(
                        new Server().url("http://localhost:8080").description("Local Development"),
                        new Server().url("https://api-dev.ttp-evaluation.ru").description("Development"),
                        new Server().url("https://api.ttp-evaluation.ru").description("Production")
                ))
                .addSecurityItem(new SecurityRequirement().addList(securitySchemeName))
                .components(new Components()
                        .addSecuritySchemes(securitySchemeName, new SecurityScheme()
                                .name(securitySchemeName)
                                .type(SecurityScheme.Type.HTTP)
                                .scheme("bearer")
                                .bearerFormat("JWT")
                                .description("–í–≤–µ–¥–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")));
    }
}